{"ast":null,"code":"import _objectSpread from\"/home/vincentarmant/workspace/nodejs/react-restapi-call/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import*as d3 from'd3';import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function ForceUndirectedD3Graph(_ref){var width=_ref.width,height=_ref.height,d3Graph=_ref.d3Graph;useEffect(function(){console.log(\"useEffect Force d3Graph\",d3Graph);console.log(\" draw d3Graph \",d3Graph);// Specify the color scale.\nvar color=d3.scaleOrdinal(d3.schemeCategory10);// The force simulation mutates links and nodes, so create a copy\n// so that re-evaluating this cell produces the same result.\nvar links=d3Graph.links.map(function(d){return _objectSpread({},d);});var nodes=d3Graph.nodes.map(function(d){return _objectSpread({},d);});// Create a simulation with several forces.\nvar simulation=d3.forceSimulation(nodes).force(\"link\",d3.forceLink(links).id(function(d){return d.id;})).force(\"charge\",d3.forceManyBody()).force(\"center\",d3.forceCenter(width/2,height/2)).on(\"tick\",ticked);// Create the SVG container.\nvar svg=d3.select(\"svg\").attr(\"width\",width).attr(\"height\",height).attr(\"viewBox\",[0,0,width,height]).attr(\"style\",\"max-width: 100%; height: auto;\");// Add a line for each link, and a circle for each node.\nvar link=svg.append(\"g\").attr(\"stroke\",\"#999\").attr(\"stroke-opacity\",0.6).selectAll().data(links).join(\"line\").attr(\"stroke-width\",function(d){return Math.sqrt(d.value);});var node=svg.append(\"g\").attr(\"stroke\",\"#fff\").attr(\"stroke-width\",1.5).selectAll().data(nodes).join(\"circle\").attr(\"r\",10).attr(\"fill\",function(d){return color(d.group);});node.append(\"title\").text(function(d){return d.id;});// Add a drag behavior.\nnode.call(d3.drag().on(\"start\",dragstarted).on(\"drag\",dragged).on(\"end\",dragended));// Set the position attributes of links and nodes each time the simulation ticks.\nfunction ticked(){link.attr(\"x1\",function(d){return d.source.x;})// DatasetDiscoveryExplainedSVGGraph.js:364 Uncaught TypeError: Cannot read properties of undefined (reading 'attr')\n.attr(\"y1\",function(d){return d.source.y;}).attr(\"x2\",function(d){return d.target.x;}).attr(\"y2\",function(d){return d.target.y;});node.attr(\"cx\",function(d){return d.x;}).attr(\"cy\",function(d){return d.y;});}// Reheat the simulation when drag starts, and fix the subject position.\nfunction dragstarted(event){if(!event.active)simulation.alphaTarget(0.3).restart();event.subject.fx=event.subject.x;event.subject.fy=event.subject.y;}// Update the subject (dragged node) position during drag.\nfunction dragged(event){event.subject.fx=event.x;event.subject.fy=event.y;}// Restore the target alpha so the simulation cools after dragging ends.\n// Unfix the subject position now that it’s no longer being dragged.\nfunction dragended(event){if(!event.active)simulation.alphaTarget(0);event.subject.fx=null;event.subject.fy=null;}// When this cell is re-run, stop the previous simulation. (This doesn’t\n// really matter since the target alpha is zero and the simulation will\n// stop naturally, but it’s a good practice.)\n//  simulation.stop();\n},[d3Graph]// nodes, links\n);return/*#__PURE__*/_jsx(\"div\",{children:d3Graph.nodes.length>0?/*#__PURE__*/_jsx(\"svg\",{id:\"svg\"// ref={svgRef}\n,style:{width:width,height:height},width:width,height:height}):/*#__PURE__*/_jsx(_Fragment,{})});}","map":{"version":3,"names":["d3","useEffect","jsx","_jsx","Fragment","_Fragment","ForceUndirectedD3Graph","_ref","width","height","d3Graph","console","log","color","scaleOrdinal","schemeCategory10","links","map","d","_objectSpread","nodes","simulation","forceSimulation","force","forceLink","id","forceManyBody","forceCenter","on","ticked","svg","select","attr","link","append","selectAll","data","join","Math","sqrt","value","node","group","text","call","drag","dragstarted","dragged","dragended","source","x","y","target","event","active","alphaTarget","restart","subject","fx","fy","children","length","style"],"sources":["/home/vincentarmant/workspace/nodejs/react-restapi-call/src/components/ForceUndirectedD3Graph.js"],"sourcesContent":["import * as d3 from 'd3';\nimport { useEffect } from \"react\";\n\nexport default function ForceUndirectedD3Graph ({ width, height,d3Graph}){\n\n\n    useEffect( function () {\n\n            console.log(`useEffect Force d3Graph`,d3Graph)\n\n         \n                console.log(` draw d3Graph `,d3Graph);\n\n                 // Specify the color scale.\n                const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n                // The force simulation mutates links and nodes, so create a copy\n                // so that re-evaluating this cell produces the same result.\n                const links = d3Graph.links.map(d => ({...d}));\n                const nodes = d3Graph.nodes.map(d => ({...d}));\n                \n                // Create a simulation with several forces.\n                const simulation = d3.forceSimulation(nodes)\n                    .force(\"link\", d3.forceLink(links).id(d => d.id))\n                    .force(\"charge\", d3.forceManyBody())\n                    .force(\"center\", d3.forceCenter(width / 2, height / 2))\n                    .on(\"tick\", ticked);\n\n                // Create the SVG container.\n                const svg = d3.select(\"svg\")\n                    .attr(\"width\", width)\n                    .attr(\"height\", height)\n                    .attr(\"viewBox\", [0, 0, width, height])\n                    .attr(\"style\", \"max-width: 100%; height: auto;\");\n\n\n                // Add a line for each link, and a circle for each node.\n                const link = svg.append(\"g\")\n                    .attr(\"stroke\", \"#999\")\n                    .attr(\"stroke-opacity\", 0.6)\n                    .selectAll()\n                    .data(links)\n                    .join(\"line\")\n                    .attr(\"stroke-width\", d => Math.sqrt(d.value));\n\n                const node = svg.append(\"g\")\n                    .attr(\"stroke\", \"#fff\")\n                    .attr(\"stroke-width\", 1.5)\n                    .selectAll()\n                    .data(nodes)\n                    .join(\"circle\")\n                    .attr(\"r\", 10)\n                    .attr(\"fill\", d => color(d.group));\n\n                node.append(\"title\")\n                    .text(d => d.id);\n\n                // Add a drag behavior.\n                node.call(d3.drag()\n                        .on(\"start\", dragstarted)\n                        .on(\"drag\", dragged)\n                        .on(\"end\", dragended));\n\n                // Set the position attributes of links and nodes each time the simulation ticks.\n                function ticked() {\n                    link\n                        .attr(\"x1\", d => d.source.x) // DatasetDiscoveryExplainedSVGGraph.js:364 Uncaught TypeError: Cannot read properties of undefined (reading 'attr')\n                        .attr(\"y1\", d => d.source.y)\n                        .attr(\"x2\", d => d.target.x)\n                        .attr(\"y2\", d => d.target.y);\n\n                    node\n                        .attr(\"cx\", d => d.x)\n                        .attr(\"cy\", d => d.y);\n                }\n\n                // Reheat the simulation when drag starts, and fix the subject position.\n                function dragstarted(event) {\n                    if (!event.active) simulation.alphaTarget(0.3).restart();\n                    event.subject.fx = event.subject.x;\n                    event.subject.fy = event.subject.y;\n                }\n\n                // Update the subject (dragged node) position during drag.\n                function dragged(event) {\n                    event.subject.fx = event.x;\n                    event.subject.fy = event.y;\n                }\n\n                // Restore the target alpha so the simulation cools after dragging ends.\n                // Unfix the subject position now that it’s no longer being dragged.\n                function dragended(event) {\n                    if (!event.active) simulation.alphaTarget(0);\n                    event.subject.fx = null;\n                    event.subject.fy = null;\n                }\n\n                // When this cell is re-run, stop the previous simulation. (This doesn’t\n                // really matter since the target alpha is zero and the simulation will\n                // stop naturally, but it’s a good practice.)\n                //  simulation.stop();\n\n        }, [d3Graph] // nodes, links\n    );\n\n    return(\n        <div>\n            {d3Graph.nodes.length>0?(\n                <svg id='svg'\n                    // ref={svgRef}\n                    style={{\n                        width,\n                        height\n                    }}\n                    width={width}\n                    height={height}\n                />\n            ):(\n                <></>\n            )\n            }\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}